{"version":3,"sources":["screens/Dashboard/index.js","screens/Dashboard/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","useState","ticTacToe","setTicTacToe","status","setStatus","winner","setWinner","checkResult","result","console","log","winningCases","window","location","reload","className","map","value","index","onClick","handelClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MACeA,ECCG,WAAO,IAAD,EACcC,mBAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KADxD,mBACbC,EADa,KACFC,EADE,OAEQF,oBAAS,GAFjB,mBAEbG,EAFa,KAELC,EAFK,OAGQJ,qBAHR,mBAGbK,EAHa,KAGLC,EAHK,KA0BdC,EAAc,WAChB,IAAIC,EAASP,EACbQ,QAAQC,IAAIF,GAEZ,IAAIG,EAAe,GACbH,EAAO,IAAMA,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOA,EAAO,KAC7DA,EAAO,IAAMA,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOA,EAAO,KAC7DA,EAAO,IAAMA,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOA,EAAO,KAC7DA,EAAO,IAAMA,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOA,EAAO,KAC7DA,EAAO,IAAMA,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOA,EAAO,KAC7DA,EAAO,IAAMA,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOA,EAAO,KAC7DA,EAAO,IAAMA,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOA,EAAO,KAC7DA,EAAO,IAAMA,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOA,EAAO,IAI/DG,EAAa,IAAMA,EAAa,IAAMA,EAAa,IAAMA,EAAa,IAAMA,EAAa,IAAMA,EAAa,IAAMA,EAAa,IAAMA,EAAa,IAAMA,EAAa,GAIjKL,EAHCH,EAGS,cAFA,eAKdS,OAAOC,SAASC,UAIxB,OACI,sBAAKC,UAAU,sBAAf,UACI,yDACA,oBAAIA,UAAU,eAAd,SAA8BV,IAC9B,qBAAKU,UAAU,MAAf,SACKd,EAAUe,KAAI,SAACC,EAAOC,GACnB,OACI,qBAAKH,UAAU,aAAf,SACI,wBAAQI,QAAS,kBAxDrB,SAACD,GAEZb,IACKF,IAAWF,EAAUiB,IACvBjB,EAAUiB,GAAS,IACnBhB,EAAa,YAAID,IACjBG,GAAU,GACVK,QAAQC,IAAIP,IAEJA,GAAWF,EAAUiB,KAC7BjB,EAAUiB,GAAS,IACnBhB,EAAa,YAAID,IACjBG,GAAU,GACVK,QAAQC,IAAI,IAAKP,IAGrBI,KAwCuCa,CAAYF,IAAQH,UAAU,sCAArD,SACKE,KAFwBC,YC9C1CG,MARf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,OCCSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.df6d886c.chunk.js","sourcesContent":["import Dashboard from './Dashboard';\r\nexport default Dashboard;","import React, { useState } from 'react';\r\n\r\nconst Dashboard = () => {\r\n    const [ticTacToe, setTicTacToe] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",]);\r\n    const [status, setStatus] = useState(true)\r\n    const [winner, setWinner] = useState()\r\n\r\n    const handelClick = (index) => {\r\n\r\n        if (!winner) {\r\n            if (!!status && !ticTacToe[index]) {\r\n                ticTacToe[index] = \"X\"\r\n                setTicTacToe([...ticTacToe])\r\n                setStatus(false);\r\n                console.log(status)\r\n\r\n            } else if (!status && !ticTacToe[index]) {\r\n                ticTacToe[index] = \"O\"\r\n                setTicTacToe([...ticTacToe])\r\n                setStatus(true);\r\n                console.log(\"o\", status)\r\n            }\r\n\r\n            checkResult()\r\n        }\r\n    }\r\n\r\n\r\n    const checkResult = () => {\r\n        let result = ticTacToe;\r\n        console.log(result)\r\n\r\n        let winningCases = [\r\n            !!result[0] && result[0] === result[1] && result[1] === result[2],\r\n            !!result[3] && result[3] === result[4] && result[4] === result[5],\r\n            !!result[6] && result[6] === result[7] && result[7] === result[8],\r\n            !!result[0] && result[0] === result[3] && result[3] === result[6],\r\n            !!result[1] && result[1] === result[4] && result[4] === result[7],\r\n            !!result[2] && result[2] === result[5] && result[5] === result[8],\r\n            !!result[0] && result[0] === result[4] && result[4] === result[8],\r\n            !!result[2] && result[2] === result[4] && result[4] === result[6]\r\n        ]\r\n\r\n\r\n        if (winningCases[0] || winningCases[1] || winningCases[2] || winningCases[3] || winningCases[4] || winningCases[5] || winningCases[6] || winningCases[7] || winningCases[8]) {\r\n            if (!status) {\r\n                setWinner('O is Winner')\r\n            } else {\r\n                setWinner('X is Winner')\r\n            }\r\n        } else {\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard container\">\r\n            <h1>X --- Tic-tac-toe --- O</h1>\r\n            <h2 className=\"text-success\">{winner}</h2>\r\n            <div className=\"row\">\r\n                {ticTacToe.map((value, index) => {\r\n                    return (\r\n                        <div className=\"col-4 mb-3\" key={index}>\r\n                            <button onClick={() => handelClick(index)} className=\"btn btn-block text-light btn-danger\">\r\n                                {value}\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import './scss/main.scss';\n\n// Bootstrap import\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Import Components\nimport Dashboard from './screens/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}